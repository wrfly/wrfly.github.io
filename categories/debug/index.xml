<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debug on wrfly&#39;s blog</title>
    <link>https://wrfly.kfd.me/categories/debug/</link>
    <description>Recent content in Debug on wrfly&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 10 May 2018 23:40:26 +0800</lastBuildDate>
    
	<atom:link href="https://wrfly.kfd.me/categories/debug/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker-Registry-Redirect-to-S3</title>
      <link>https://wrfly.kfd.me/posts/docker-registry-redirect-to-s3/</link>
      <pubDate>Thu, 10 May 2018 23:40:26 +0800</pubDate>
      
      <guid>https://wrfly.kfd.me/posts/docker-registry-redirect-to-s3/</guid>
      <description>不要让别人冲毁你的时间.
 事情的起因是, 办公室里从AWS上的docker registry拉镜像太慢, 用了kcp也不管用. 但是BBR又不能随便开, 那台机器不能关机重启. 所以只好折中, 在另一台机器上insmod tcp_bbr然后在上面跑一个nginx tcp reverse proxy, 代理一下真正的registry.
emm, 但是事情并没有按照想象中的那样顺利.
具体表现为, 本地到中转server的速度很快, 中转server到register的速度也不慢. 但是本地从中转上拉镜像就特别慢. TCP的window很小.
很奇怪啊很奇怪.
虽然也有用tcpdump抓包观察, 但是, 诶, 等等. 为什么出现了一个莫名的IP? 在tcpdump的流量中, 经验出现了 s3-1-w.aws~~~.com 的流量!
我明明是从registry server上拉的镜像, 为什么会跟S3交互呢?
会不会是, registry认证通过后, 直接给重定向到S3了!
所以本地即使配置了中转服务器作为代理, 但实际上还是从S3下载文件! 嗯, 很有道理的样子.
于是就搜了一下, 嘿, 真叫我蒙对了&amp;hellip;
https://docs.docker.com/registry/configuration/#redirect
这个开关是默认打开的(disable: false), 显然没有考虑我天朝行情.
我们的registry后端存储用的是S3, 所以这里就直接redirect到S3了. 在国外这种默认是没问题的, 把流量全都丢给S3, registry上就不会有带宽瓶颈了. 但是在国内&amp;hellip;
解决方法就是, 把这个开关设置成true.
这里不得不吐槽一下这个配置, 因为:
sotage: ... delete: enabled: true redirect: disable: false 也不知道是谁设计了这样的开关, 就不能统一一下么.</description>
    </item>
    
    <item>
      <title>Max-Length-in-Shebang</title>
      <link>https://wrfly.kfd.me/posts/max-length-in-shebang/</link>
      <pubDate>Tue, 13 Mar 2018 22:31:28 +0800</pubDate>
      
      <guid>https://wrfly.kfd.me/posts/max-length-in-shebang/</guid>
      <description>Life is full of surprises.
 昨天遇到一个Jenkins CI中执行tox出错的问题, 说 interpreter not found, 仔细debug了一番, 最终发现是shebang太长了.
然后就找到了对应的解释: shebang-line-limit-in-bash-and-linux-kernel
原因是在执行tox的过程中, tox没有使用系统自带的python 或者 pip, 而是自己下载了一个, 放到 $YOUR_PROJECT/.tox/bin/py27/pip 里面, 然后这个pip文件里的开头是 #!$YOUR_PROJECT/.tox/bin/py27/python2.7, 如果你的project名字太长, 导致这一行超过了128个字符的话, 那么就gg.
这个问题会经常出现在Jenkins的python项目里, 因为jenkins在CI的过程中会自动扩展你项目的名字, 让他变得很长, 很大概率超过128个, 比如我们项目的 #!/var/jenkins_home/workspace/srv_feature_PLATFORMDEV-581-QM1COB64VSWGD5RGAT631CKDKW3TXH2CEI0XKLJZICJXXBM8SF9A@2/.tox/py27/bin/python2.7 根本tmd不能用. 报错信息: bad interpreter: Permission denied
还有一些人在讨论: https://github.com/pypa/pip/issues/1773 然而他们好久没有发布新版本出来了&amp;hellip;
有个老哥也遇到坑了: /usr/bin/python: bad interpreter: Permission denied error
解决方案是, 在tox的配置文件里指定command而不是用它自己生成的python或者pip:
[tox] # List the environment that will be run by default minversion = 1.6 envlist = py27,pep8 skipsdist = True [testenv] setenv = VIRTUAL_ENV={envdir} LANG=en_US.</description>
    </item>
    
  </channel>
</rss>